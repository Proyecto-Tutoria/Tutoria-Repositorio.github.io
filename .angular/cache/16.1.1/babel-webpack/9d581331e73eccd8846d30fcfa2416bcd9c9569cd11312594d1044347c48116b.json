{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/profile.service\";\nimport * as i2 from \"@angular/common\";\nfunction ProfileComponent_div_0_li_2_img_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 5);\n  }\n  if (rf & 2) {\n    const profile_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"src\", profile_r4.profile_picture, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction ProfileComponent_div_0_li_2_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"No picture available\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ProfileComponent_div_0_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtemplate(6, ProfileComponent_div_0_li_2_img_6_Template, 1, 1, \"img\", 3);\n    i0.ɵɵtemplate(7, ProfileComponent_div_0_li_2_span_7_Template, 2, 0, \"span\", 4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const profile_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"User: \", profile_r4.user, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Bio: \", profile_r4.bio, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", profile_r4.profile_picture);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !profile_r4.profile_picture);\n  }\n}\nfunction ProfileComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"ul\");\n    i0.ɵɵtemplate(2, ProfileComponent_div_0_li_2_Template, 8, 4, \"li\", 2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.profiles);\n  }\n}\nfunction ProfileComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"No profiles found.\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class ProfileComponent {\n  constructor(profileService) {\n    this.profileService = profileService;\n    this.profiles = [];\n  }\n  ngOnInit() {\n    this.loadProfiles();\n  }\n  loadProfiles() {\n    this.profileService.getProfiles().subscribe(data => {\n      console.log('Profiles loaded:', data); // Agrega un console log para depuración\n      this.profiles = data;\n    }, error => {\n      console.error('Error fetching profiles:', error);\n    });\n  }\n}\nProfileComponent.ɵfac = function ProfileComponent_Factory(t) {\n  return new (t || ProfileComponent)(i0.ɵɵdirectiveInject(i1.ProfileService));\n};\nProfileComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ProfileComponent,\n  selectors: [[\"app-profile\"]],\n  decls: 3,\n  vars: 2,\n  consts: [[4, \"ngIf\", \"ngIfElse\"], [\"noProfiles\", \"\"], [4, \"ngFor\", \"ngForOf\"], [\"alt\", \"Profile Picture\", 3, \"src\", 4, \"ngIf\"], [4, \"ngIf\"], [\"alt\", \"Profile Picture\", 3, \"src\"]],\n  template: function ProfileComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ProfileComponent_div_0_Template, 3, 1, \"div\", 0);\n      i0.ɵɵtemplate(1, ProfileComponent_ng_template_1_Template, 2, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.profiles.length > 0)(\"ngIfElse\", _r1);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelement","ɵɵproperty","profile_r4","profile_picture","ɵɵsanitizeUrl","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","ProfileComponent_div_0_li_2_img_6_Template","ProfileComponent_div_0_li_2_span_7_Template","ɵɵadvance","ɵɵtextInterpolate1","user","bio","ProfileComponent_div_0_li_2_Template","ctx_r0","profiles","ProfileComponent","constructor","profileService","ngOnInit","loadProfiles","getProfiles","subscribe","data","console","log","error","ɵɵdirectiveInject","i1","ProfileService","selectors","decls","vars","consts","template","ProfileComponent_Template","rf","ctx","ProfileComponent_div_0_Template","ProfileComponent_ng_template_1_Template","ɵɵtemplateRefExtractor","length","_r1"],"sources":["/Users/arkhaa/Documents/PROYECTO TUTORIA/src/app/pages/profile/profile.component.ts","/Users/arkhaa/Documents/PROYECTO TUTORIA/src/app/pages/profile/profile.component.html"],"sourcesContent":["// src/app/pages/profile/profile.component.ts\nimport { Component, OnInit } from '@angular/core';\nimport { ProfileService } from 'src/app/services/profile.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  profiles: any[] = [];\n\n  constructor(private profileService: ProfileService) {}\n\n  ngOnInit(): void {\n    this.loadProfiles();\n  }\n\n  loadProfiles(): void {\n    this.profileService.getProfiles().subscribe(\n      (data: any[]) => {\n        console.log('Profiles loaded:', data); // Agrega un console log para depuración\n        this.profiles = data;\n      },\n      (error: any) => {\n        console.error('Error fetching profiles:', error);\n      }\n    );\n  }\n}\n","<!-- src/app/pages/profile/profile.component.html -->\n<div *ngIf=\"profiles.length > 0; else noProfiles\">\n    <ul>\n      <li *ngFor=\"let profile of profiles\">\n        <p>User: {{ profile.user }}</p>\n        <p>Bio: {{ profile.bio }}</p>\n        <p>\n          <img *ngIf=\"profile.profile_picture\" [src]=\"profile.profile_picture\" alt=\"Profile Picture\" />\n          <span *ngIf=\"!profile.profile_picture\">No picture available</span>\n        </p>\n      </li>\n    </ul>\n  </div>\n  \n  <ng-template #noProfiles>\n    <p>No profiles found.</p>\n  </ng-template>\n  "],"mappings":";;;;;ICOUA,EAAA,CAAAC,SAAA,aAA6F;;;;IAAxDD,EAAA,CAAAE,UAAA,QAAAC,UAAA,CAAAC,eAAA,EAAAJ,EAAA,CAAAK,aAAA,CAA+B;;;;;IACpEL,EAAA,CAAAM,cAAA,WAAuC;IAAAN,EAAA,CAAAO,MAAA,2BAAoB;IAAAP,EAAA,CAAAQ,YAAA,EAAO;;;;;IALtER,EAAA,CAAAM,cAAA,SAAqC;IAChCN,EAAA,CAAAO,MAAA,GAAwB;IAAAP,EAAA,CAAAQ,YAAA,EAAI;IAC/BR,EAAA,CAAAM,cAAA,QAAG;IAAAN,EAAA,CAAAO,MAAA,GAAsB;IAAAP,EAAA,CAAAQ,YAAA,EAAI;IAC7BR,EAAA,CAAAM,cAAA,QAAG;IACDN,EAAA,CAAAS,UAAA,IAAAC,0CAAA,iBAA6F;IAC7FV,EAAA,CAAAS,UAAA,IAAAE,2CAAA,kBAAkE;IACpEX,EAAA,CAAAQ,YAAA,EAAI;;;;IALDR,EAAA,CAAAY,SAAA,GAAwB;IAAxBZ,EAAA,CAAAa,kBAAA,WAAAV,UAAA,CAAAW,IAAA,KAAwB;IACxBd,EAAA,CAAAY,SAAA,GAAsB;IAAtBZ,EAAA,CAAAa,kBAAA,UAAAV,UAAA,CAAAY,GAAA,KAAsB;IAEjBf,EAAA,CAAAY,SAAA,GAA6B;IAA7BZ,EAAA,CAAAE,UAAA,SAAAC,UAAA,CAAAC,eAAA,CAA6B;IAC5BJ,EAAA,CAAAY,SAAA,GAA8B;IAA9BZ,EAAA,CAAAE,UAAA,UAAAC,UAAA,CAAAC,eAAA,CAA8B;;;;;IAP/CJ,EAAA,CAAAM,cAAA,UAAkD;IAE5CN,EAAA,CAAAS,UAAA,IAAAO,oCAAA,gBAOK;IACPhB,EAAA,CAAAQ,YAAA,EAAK;;;;IARqBR,EAAA,CAAAY,SAAA,GAAW;IAAXZ,EAAA,CAAAE,UAAA,YAAAe,MAAA,CAAAC,QAAA,CAAW;;;;;IAYrClB,EAAA,CAAAM,cAAA,QAAG;IAAAN,EAAA,CAAAO,MAAA,yBAAkB;IAAAP,EAAA,CAAAQ,YAAA,EAAI;;;ADN7B,OAAM,MAAOW,gBAAgB;EAG3BC,YAAoBC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;IAFlC,KAAAH,QAAQ,GAAU,EAAE;EAEiC;EAErDI,QAAQA,CAAA;IACN,IAAI,CAACC,YAAY,EAAE;EACrB;EAEAA,YAAYA,CAAA;IACV,IAAI,CAACF,cAAc,CAACG,WAAW,EAAE,CAACC,SAAS,CACxCC,IAAW,IAAI;MACdC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,IAAI,CAAC,CAAC,CAAC;MACvC,IAAI,CAACR,QAAQ,GAAGQ,IAAI;IACtB,CAAC,EACAG,KAAU,IAAI;MACbF,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD,CAAC,CACF;EACH;;AAnBWV,gBAAgB,C;mBAAhBA,gBAAgB,EAAAnB,EAAA,CAAA8B,iBAAA,CAAAC,EAAA,CAAAC,cAAA;AAAA;AAAhBb,gBAAgB,C;QAAhBA,gBAAgB;EAAAc,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCR7BvC,EAAA,CAAAS,UAAA,IAAAgC,+BAAA,iBAWQ;MAENzC,EAAA,CAAAS,UAAA,IAAAiC,uCAAA,gCAAA1C,EAAA,CAAA2C,sBAAA,CAEc;;;;MAfV3C,EAAA,CAAAE,UAAA,SAAAsC,GAAA,CAAAtB,QAAA,CAAA0B,MAAA,KAA2B,aAAAC,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}