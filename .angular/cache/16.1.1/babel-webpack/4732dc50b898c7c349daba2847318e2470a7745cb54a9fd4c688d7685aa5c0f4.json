{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/profile.service\";\nimport * as i2 from \"@angular/common\";\nfunction ProfileComponent_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 2);\n    i0.ɵɵlistener(\"click\", function ProfileComponent_li_4_Template_li_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const profile_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.selectProfile(profile_r2));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const profile_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", profile_r2.user, \" - \", profile_r2.bio, \" \");\n  }\n}\nfunction ProfileComponent_div_5_img_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"src\", ctx_r5.selectedProfile.profile_picture, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction ProfileComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2, \"Selected Profile\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, ProfileComponent_div_5_img_7_Template, 1, 1, \"img\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"User: \", ctx_r1.selectedProfile.user, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Bio: \", ctx_r1.selectedProfile.bio, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.selectedProfile.profile_picture);\n  }\n}\nexport class ProfileComponent {\n  constructor(profileService) {\n    this.profileService = profileService;\n    this.profiles = [];\n    this.selectedProfile = null;\n  }\n  ngOnInit() {\n    this.loadProfiles();\n  }\n  loadProfiles() {\n    this.profileService.getProfiles().subscribe(data => {\n      this.profiles = data;\n    });\n  }\n  selectProfile(profile) {\n    this.selectedProfile = profile;\n  }\n}\nProfileComponent.ɵfac = function ProfileComponent_Factory(t) {\n  return new (t || ProfileComponent)(i0.ɵɵdirectiveInject(i1.ProfileService));\n};\nProfileComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ProfileComponent,\n  selectors: [[\"app-profile\"]],\n  decls: 6,\n  vars: 2,\n  consts: [[3, \"click\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [3, \"click\"], [\"alt\", \"Profile Picture\", 3, \"src\", 4, \"ngIf\"], [\"alt\", \"Profile Picture\", 3, \"src\"]],\n  template: function ProfileComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n      i0.ɵɵtext(2, \"Profiles\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"ul\");\n      i0.ɵɵtemplate(4, ProfileComponent_li_4_Template, 2, 2, \"li\", 0);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(5, ProfileComponent_div_5_Template, 8, 3, \"div\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.profiles);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.selectedProfile);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵlistener","ProfileComponent_li_4_Template_li_click_0_listener","restoredCtx","ɵɵrestoreView","_r4","profile_r2","$implicit","ctx_r3","ɵɵnextContext","ɵɵresetView","selectProfile","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate2","user","bio","ɵɵelement","ɵɵproperty","ctx_r5","selectedProfile","profile_picture","ɵɵsanitizeUrl","ɵɵtemplate","ProfileComponent_div_5_img_7_Template","ɵɵtextInterpolate1","ctx_r1","ProfileComponent","constructor","profileService","profiles","ngOnInit","loadProfiles","getProfiles","subscribe","data","profile","ɵɵdirectiveInject","i1","ProfileService","selectors","decls","vars","consts","template","ProfileComponent_Template","rf","ctx","ProfileComponent_li_4_Template","ProfileComponent_div_5_Template"],"sources":["/Users/arkhaa/Documents/PROYECTO TUTORIA/src/app/pages/profile/profile.component.ts","/Users/arkhaa/Documents/PROYECTO TUTORIA/src/app/pages/profile/profile.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ProfileService } from '../../services/profile.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  profiles: any[] = [];\n  selectedProfile: any = null;\n\n  constructor(private profileService: ProfileService) {}\n\n  ngOnInit(): void {\n    this.loadProfiles();\n  }\n\n  loadProfiles(): void {\n    this.profileService.getProfiles().subscribe((data: any) => {\n      this.profiles = data;\n    });\n  }\n\n  selectProfile(profile: any): void {\n    this.selectedProfile = profile;\n  }\n}\n","<div>\n    <h1>Profiles</h1>\n    <ul>\n      <li *ngFor=\"let profile of profiles\" (click)=\"selectProfile(profile)\">\n        {{ profile.user }} - {{ profile.bio }}\n      </li>\n    </ul>\n  \n    <div *ngIf=\"selectedProfile\">\n      <h2>Selected Profile</h2>\n      <p>User: {{ selectedProfile.user }}</p>\n      <p>Bio: {{ selectedProfile.bio }}</p>\n      <img [src]=\"selectedProfile.profile_picture\" *ngIf=\"selectedProfile.profile_picture\" alt=\"Profile Picture\"/>\n    </div>\n  </div>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}