{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/profile.service\";\nimport * as i2 from \"@angular/common\";\nfunction ProfileComponent_div_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"img\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const profile_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(profile_r2.user);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(profile_r2.bio);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", profile_r2.profile_picture, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction ProfileComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, ProfileComponent_div_0_div_1_Template, 6, 3, \"div\", 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.profiles);\n  }\n}\nexport class ProfileComponent {\n  constructor(profileService) {\n    this.profileService = profileService;\n    this.profiles = [];\n  }\n  ngOnInit() {\n    this.profileService.getProfiles().subscribe(data => {\n      this.profiles = data;\n    });\n  }\n}\nProfileComponent.ɵfac = function ProfileComponent_Factory(t) {\n  return new (t || ProfileComponent)(i0.ɵɵdirectiveInject(i1.ProfileService));\n};\nProfileComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ProfileComponent,\n  selectors: [[\"app-profile\"]],\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [\"alt\", \"Profile Picture\", 3, \"src\"]],\n  template: function ProfileComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ProfileComponent_div_0_Template, 2, 1, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.profiles.length);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","profile_r2","user","bio","ɵɵproperty","profile_picture","ɵɵsanitizeUrl","ɵɵtemplate","ProfileComponent_div_0_div_1_Template","ctx_r0","profiles","ProfileComponent","constructor","profileService","ngOnInit","getProfiles","subscribe","data","ɵɵdirectiveInject","i1","ProfileService","selectors","decls","vars","consts","template","ProfileComponent_Template","rf","ctx","ProfileComponent_div_0_Template","length"],"sources":["/Users/arkhaa/Documents/PROYECTO TUTORIA/src/app/pages/profile/profile.component.ts","/Users/arkhaa/Documents/PROYECTO TUTORIA/src/app/pages/profile/profile.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ProfileService } from '../../services/profile.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  profiles: any[] = [];\n\n  constructor(private profileService: ProfileService) {}\n\n  ngOnInit(): void {\n    this.profileService.getProfiles().subscribe(data => {\n      this.profiles = data as any[];\n    });\n  }\n\n  // Métodos para crear, actualizar y eliminar perfiles\n}\n","<div *ngIf=\"profiles.length\">\n    <div *ngFor=\"let profile of profiles\">\n      <h2>{{ profile.user }}</h2>\n      <p>{{ profile.bio }}</p>\n      <img [src]=\"profile.profile_picture\" alt=\"Profile Picture\">\n      <!-- Agregar opciones para editar o eliminar aquí -->\n    </div>\n  </div>\n  "],"mappings":";;;;;ICCIA,EAAA,CAAAC,cAAA,UAAsC;IAChCD,EAAA,CAAAE,MAAA,GAAkB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC3BH,EAAA,CAAAC,cAAA,QAAG;IAAAD,EAAA,CAAAE,MAAA,GAAiB;IAAAF,EAAA,CAAAG,YAAA,EAAI;IACxBH,EAAA,CAAAI,SAAA,aAA2D;IAE7DJ,EAAA,CAAAG,YAAA,EAAM;;;;IAJAH,EAAA,CAAAK,SAAA,GAAkB;IAAlBL,EAAA,CAAAM,iBAAA,CAAAC,UAAA,CAAAC,IAAA,CAAkB;IACnBR,EAAA,CAAAK,SAAA,GAAiB;IAAjBL,EAAA,CAAAM,iBAAA,CAAAC,UAAA,CAAAE,GAAA,CAAiB;IACfT,EAAA,CAAAK,SAAA,GAA+B;IAA/BL,EAAA,CAAAU,UAAA,QAAAH,UAAA,CAAAI,eAAA,EAAAX,EAAA,CAAAY,aAAA,CAA+B;;;;;IAJ1CZ,EAAA,CAAAC,cAAA,UAA6B;IACzBD,EAAA,CAAAa,UAAA,IAAAC,qCAAA,iBAKM;IACRd,EAAA,CAAAG,YAAA,EAAM;;;;IANqBH,EAAA,CAAAK,SAAA,GAAW;IAAXL,EAAA,CAAAU,UAAA,YAAAK,MAAA,CAAAC,QAAA,CAAW;;;ADOxC,OAAM,MAAOC,gBAAgB;EAG3BC,YAAoBC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;IAFlC,KAAAH,QAAQ,GAAU,EAAE;EAEiC;EAErDI,QAAQA,CAAA;IACN,IAAI,CAACD,cAAc,CAACE,WAAW,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MACjD,IAAI,CAACP,QAAQ,GAAGO,IAAa;IAC/B,CAAC,CAAC;EACJ;;AATWN,gBAAgB,C;mBAAhBA,gBAAgB,EAAAjB,EAAA,CAAAwB,iBAAA,CAAAC,EAAA,CAAAC,cAAA;AAAA;AAAhBT,gBAAgB,C;QAAhBA,gBAAgB;EAAAU,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCR7BjC,EAAA,CAAAa,UAAA,IAAAsB,+BAAA,iBAOQ;;;MAPFnC,EAAA,CAAAU,UAAA,SAAAwB,GAAA,CAAAlB,QAAA,CAAAoB,MAAA,CAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}